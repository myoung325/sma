/* ============================
   Flexbox utility classes
   ============================ */
.hflex {
  display: flex;
  flex-direction: row; /* horizontal layout */
}

.vflex {
  display: flex;
  flex-direction: column; /* vertical layout */
}

/* ============================
   Base document styles
   ============================ */
html,
body {
  margin: 0;
  padding: 0;
  overflow: hidden; /* Prevent scrollbars */
  height: 100%;
  width: 100%;
}

/* Container that scales to fit the viewport */
#scalable-wrapper {
  position: fixed;
  top: 0;
  left: 0;
  transform-origin: top left;
}

/* ============================
   Camera info panel
   ============================ */
#camera-info {
  display: flex;
  flex-direction: column;
  justify-content: center;
  padding-left: 12px;
  font-size: 20px;
  font-family: sans-serif;
}

/* ============================
   Dialog styles
   ============================ */
dialog p,
dialog input,
dialog button {
  font-size: 1.5em;
}

dialog button {
  display: inline-block; /* keep buttons inline */
  margin: 0 0.5em;       /* spacing between buttons */
}

dialog {
  text-align: center;    /* center-align inline content */
  padding-bottom: 1em;   /* space below dialog content */
}

/* ============================
   Video & countdown overlay
   ============================ */
#video-column {
  margin: 10px;
  flex: 0 0 auto;          /* prevent shrinking */
  will-change: transform;  /* optimization for animations */
}

#video-container {
  position: relative;
  /* Width & height are set dynamically by JS to match camera resolution */
}

/* Countdown overlay SVG positioned above the video */
#countdown {
  position: absolute;
  top: -70%;                    /* vertically centered */
  left: 0%;                     /* horizontally centered */
  transform: translate(-50%, -50%);
  width: 100px;
  height: 100px;
  overflow: visible;             /* ensure large text isn’t clipped */
  pointer-events: none;          /* let clicks pass through */
  z-index: 10;                   /* above video */
}

#countdown text {
  dominant-baseline: middle;
  text-anchor: middle;
  fill: red;
  font-size: 36pt;
  user-select: none;
}

/* Resize video and canvases dynamically */
#video-container > * {
  width: 100%;
  height: auto;
  max-width: 100%;
}

/* Video fills the container */
video {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: cover; /* maintain aspect ratio while covering */
}

/* ============================
   Video overlay: messages
   ============================ */
#message-container {
  display: flex;
  justify-content: center;
}

#video-message {
  font-size: 36px;
  text-align: center;
  z-index: 1;
}

/* ============================
   Timeline / progress indicator
   ============================ */
#progress-container {
  display: none !important; /* disabled */
}

#progress-marker {
  display: block;
  width: 100%;
  height: 10px;
  color: red;
  transform: translateX(-100%); /* initially hidden */
  transition: transform 0.3s ease;
}

#progress-line {
  stroke: currentColor;
  stroke-width: 2px;
}

#progress-circle {
  stroke: none;
  fill: currentColor;
}

/* ============================
   Playback speed control
   ============================ */
#speed-container {
  display: flex;
  flex-flow: row nowrap;
  justify-content: space-between;
  margin-top: 10px;
}

.speed-label {
  flex: 0 1 auto;
  flex-basis: 120px;
  margin: 0;
  text-align: right;
}

#playbackSpeed {
  flex: 99 0 auto;
}

/* ============================
   Thumbnails strip
   ============================ */
#thumbnail-container {
  display: flex;
  overflow-x: auto;
  max-width: 100%;
  margin-top: 10px;
  min-height: 100px; /* Reserve space even when empty */
}

#thumbnail-container > canvas {
  margin: 0 5px;
  height: 90px; /* Fixed thumbnail height */
  width: auto;
}

/* Cursor overlay for timeline */
#thumbnail-cursor-container {
  position: absolute;
  left: 0;
  top: 0;
}

/* ============================
   Buttons and controls
   ============================ */
#control-column {
  flex: 1 1 auto;
}

#button-wrapper {
  display: flex;
  justify-content: center; /* center buttons and camera info */
  align-items: center;     /* vertical centering */
  flex-wrap: nowrap;
  gap: 20px;
}

#button-container {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  gap: 10px;
  margin-bottom: 15px;
}

/* Button base style */
.button72 {
  position: relative;
  overflow: hidden;
  display: flex;
  flex-direction: column;
  background-color: #b0c4de;
  border-radius: 15px;
  border: 2px solid transparent;
  padding: 2px;
  margin: 2px;
  width: 92px;
  min-height: 92px;
  justify-content: space-between;
  cursor: pointer;
  user-select: none;
}

/* Button pressed state */
.button72.pressed {
  background-color: #4682b4;
  border-color: #315f91;
}

/* Icon inside button */
.button72 > .iconContainer {
  will-change: transform;
  width: 48px;
  height: 48px;
  position: relative;
}

.button72 > img {
  width: 58px;
  height: 58px;
  align-self: center;
}

/* Label under button icons */
.button72 > .buttonLabel {
  font: normal normal normal 18px/normal Arial;
  text-align: center;
  width: 100%;
  user-select: none;
}

/* ============================
   Layout and body
   ============================ */
body {
  display: flex;
  justify-content: center; /* horizontal centering */
  align-items: flex-start; /* stick to top vertically */
  min-height: 100vh;
  margin: 0;
  padding: 20px;
  background: #f0f0f0;     /* subtle background color */
  box-sizing: border-box;
}

#top-container {
  display: flex;
  justify-content: center;
}

/* ============================
   Canvases & overlays
   ============================ */
#stream {
  position: absolute;
  z-index: 1;
  border: 1px solid black;
}

/* Semi-transparent overlay for onion skinning */
#snapshot-canvas {
  position: absolute;
  top: 0;
  left: 0;
  z-index: 2;
  opacity: 0.5;
  width: 100%;
  height: 100%;
  pointer-events: none; /* doesn’t block video interaction */
}

#play-canvas {
  position: absolute;
  top: 0;
  left: 0;
  pointer-events: none; /* purely visual */
}

/* ============================
   SVGs and icons
   ============================ */
#svg-defs {
  width: 0;
  height: 0;
}

.iconContainer > svg {
  position: absolute;
  top: 0;
  left: 0;
  width: 72px;
  height: 72px;
  --width: 72;
  --height: 72;
  transform: translateX(17px);
}

/* Install button for PWA */
#installButton {
  position: fixed;
  bottom: 20px;
  right: 20px;
  width: 212px;
  min-height: 92px;
  border-radius: 15px;
  background-color: blue;
  display: flex;
  flex-direction: column;
  justify-content: space-evenly;
  text-align: center;
  color: white;
  font-family: Arial;
  cursor: pointer;
  user-select: none;
}

/* ============================
   Clock overlay
   ============================ */
.center-circle {
  cx: calc(var(--width) / 2);
  cy: calc(var(--height) / 2);
}

#clockContainer {
  width: 100px;
  height: 100px;
  position: absolute;
  right: 10px;
  bottom: 0;
  pointer-events: none;
}

#clock,
#clock-hand {
  width: 100px;
  height: 100px;
  position: absolute;
}

/* ============================
   Animations
   ============================ */
.not-recording {
  color: black;
}

/* Ripple animation for recording state */
.ripple-decay {
  will-change: transform;
  animation-duration: 1.5s;
  animation-name: ripple-decay;
  animation-iteration-count: infinite;
}

@keyframes ripple-decay {
  from {
    transform: scale(0.25);
    opacity: 1;
  }
  to {
    transform: scale(1);
    opacity: 0;
  }
}

/* Countdown shrinking effect */
.recede-decay {
  will-change: transform;
  animation-duration: 1s;
  animation-name: recede-decay;
  animation-timing-function: ease-in;
  animation-iteration-count: 3;
}

@keyframes recede-decay {
  from {
    transform: scale(1);
    opacity: 1;
  }
  to {
    transform: scale(0.25);
    opacity: 0;
  }
}

/* Timeline slide animation */
.slide-right {
  animation-duration: 5s;
  animation-name: slide-right;
  animation-timing-function: linear;
}

@keyframes slide-right {
  from {
    transform: translateX(-90%);
  }
  to {
    transform: translateX(100%);
  }
}
